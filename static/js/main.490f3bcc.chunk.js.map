{"version":3,"sources":["greek.jpg","components/header.js","bookmarks.js","components/aphorism.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","header","flexGrow","logo","width","height","background","ProcrustesImg","backgroundSize","textAlign","padding","boxSizing","color","textShadow","borderRadius","logoTitle","fontSize","textTransform","fontWeight","logoSubtitle","borderTop","boxShadow","paddingTop","menuButton","marginRight","title","list","setCategory","classes","useState","drawerOpen","setDrawerOpen","toggleDrawer","open","event","type","key","AppBar","position","Toolbar","IconButton","edge","className","aria-label","onClick","Typography","variant","SwipeableDrawer","onClose","onOpen","role","onKeyDown","Paper","List","ListItem","button","ListItemText","primary","Divider","Object","keys","data","map","text","toLowerCase","loadStorage","Set","JSON","parse","window","localStorage","getItem","getAllBookmarked","storage","Array","from","card","margin","cardActions","marginLeft","display","justifyContent","expand","transform","transition","transitions","create","duration","shortest","expandOpen","updateBookmarked","expanded","setExpanded","bookmarked","setBookmarked","useEffect","item","has","Card","CardContent","CardActions","disableSpacing","delete","add","console","log","setItem","stringify","toggleBookmarkItem","notes","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","fullList","App","category","entries","align","Container","maxWidth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.490f3bcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greek.a28c7df1.jpg\";","import React, { useState } from 'react';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProcrustesImg from '../greek.jpg';\nimport data from '../data.json';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    flexGrow: 1\n  },\n  logo: {\n    width: 300,\n    height: 375,\n    background: `url(${ProcrustesImg})`,\n    backgroundSize: 'contain',\n    textAlign: 'center',\n    padding: '83px 10px',\n    boxSizing: 'border-box',\n    color: '#ffffff',\n    textShadow: '0px 0px 3px rgba(0,0,0,0.9)',\n    borderRadius: 0\n  },\n  logoTitle: {\n    fontSize: 42,\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  },\n  logoSubtitle: {\n    borderTop: '1px solid #ffffff',\n    boxShadow: '0px -1px 0px rgba(0,0,0,0.4)',\n    textShadow: '0px 0px 2px rgba(0,0,0,1)',\n    paddingTop: 20\n  },\n  menuButton: {\n    marginRight: '20px'\n  },\n  title: {\n    flexGrow: 1\n  },\n  list: {\n    width: 300,\n    textTransform: 'capitalize'\n  }\n}));\n\nexport default ({ setCategory }) => {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const toggleDrawer = open => event => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setDrawerOpen(open);\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <Paper className={classes.logo}>\n        <Typography className={classes.logoTitle}>\n          The bed of Procrustes\n        </Typography>\n        <Typography className={classes.logoSubtitle}>\n          Philosophical and practical Aphorisms\n        </Typography>\n      </Paper>\n      <List>\n        <ListItem button onClick={() => setCategory('Bookmarked')}>\n          <BookmarkIcon />\n          <ListItemText primary=\"Bookmarked\" />\n        </ListItem>\n        <ListItem button onClick={() => setCategory('')}>\n          <ListItemText primary=\"All\" />\n        </ListItem>\n        <Divider />\n        {Object.keys(data).map(text => (\n          <ListItem button key={text} onClick={() => setCategory(text)}>\n            <ListItemText primary={text.toLowerCase()} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Procrustes\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer\n        open={drawerOpen}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n      >\n        {sideList()}\n      </SwipeableDrawer>\n    </>\n  );\n};\n","const loadStorage = () =>\n  new Set(JSON.parse(window.localStorage.getItem('bookmarks')));\n\n//let storage = loadStorage();\n\nexport const toggleBookmarkItem = item => {\n  const storage = loadStorage();\n  const has = storage.has(item);\n  has ? storage.delete(item) : storage.add(item);\n  console.log(item);\n  console.log(storage);\n  console.log(Array.from(storage));\n  window.localStorage.setItem('bookmarks', JSON.stringify(Array.from(storage)));\n  return !has;\n};\n\nexport const isBookmarked = item => {\n  const storage = loadStorage();\n  return storage.has(item);\n};\n\nexport const getAllBookmarked = () => {\n  const storage = loadStorage();\n  return Array.from(storage);\n};\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport notes from '../notes.json';\nimport { toggleBookmarkItem, isBookmarked } from '../bookmarks';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: '26px 0',\n    padding: '16px'\n  },\n  cardActions: {\n    marginLeft: 'auto',\n    textAlign: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nexport default ({ text, updateBookmarked }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [bookmarked, setBookmarked] = useState(false);\n  useEffect(() => {\n    setBookmarked(isBookmarked(text));\n  }, []);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>{text}</CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <IconButton>\n          <CommentIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            setBookmarked(toggleBookmarkItem(text));\n            updateBookmarked();\n          }}\n        >\n          {bookmarked ? <BookmarkIcon /> : <BookmarkBorderIcon />}\n        </IconButton>\n        {notes[text] && (\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={() => setExpanded(!expanded)}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        )}\n      </CardActions>\n      {notes[text] && (\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"caption\">{notes[text]}</Typography>\n          </CardContent>\n        </Collapse>\n      )}\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport { VariableSizeList } from 'react-window';\n\nimport './App.css';\nimport data from './data.json';\nimport Header from './components/header';\nimport Aphorism from './components/aphorism';\nimport { getAllBookmarked } from './bookmarks';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    flexGrow: 1\n  },\n  logo: {\n    width: '250px'\n  },\n  menuButton: {\n    marginRight: '20px'\n  },\n  title: {\n    flexGrow: 1\n  },\n  list: {\n    width: 250,\n    textTransform: 'capitalize'\n  },\n  fullList: {\n    width: 'auto'\n  },\n  card: {\n    margin: '26px 0',\n    padding: '16px'\n  },\n  cardActions: {\n    marginLeft: 'auto',\n    textAlign: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nfunction App() {\n  const [category, setCategory] = useState(\n    window.localStorage.getItem('category') || Object.keys(data)[0]\n  );\n  const [bookmarked, setBookmarked] = useState([]);\n\n  const categoryUpdate = cat => {\n    window.localStorage.setItem('category', cat);\n    setCategory(cat);\n  };\n\n  const updateBookmarked = () => {\n    setBookmarked(getAllBookmarked());\n  };\n\n  useEffect(() => {\n    updateBookmarked();\n  }, [category]);\n\n  const items = category === 'Bookmarked' ? bookmarked : data[category];\n\n  let entries = items.map(text => (\n    <Aphorism text={text} key={text} updateBookmarked={updateBookmarked} />\n  ));\n\n  return (\n    <>\n      <Header setCategory={setCategory} />\n      <Typography variant=\"h2\" align=\"center\">\n        {category}\n      </Typography>\n      <Container maxWidth=\"md\">{entries}</Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}